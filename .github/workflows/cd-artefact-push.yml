name: CD artefact push

on:
  workflow_call:

  workflow_dispatch:

jobs:
  push-artefact:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      ENVIRONMENT: ${{ github.ref_name == 'prod' || 'dev'}}
      CONFIG_FILE: stack-template/config.yml

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1

      - name: Install yq
        uses: Makepad-fr/setup-yq-action@main
        with:
          version: '4.6.0'

      - name: Parse configuration file
        id: parse_config
        run: |
          REGION=$(yq eval ".regions.${ENVIRONMENT}" $CONFIG_FILE)
          echo "AWS_REGION=$REGION" >> $GITHUB_ENV

      # Configuration for Production
      - name: Configure AWS credentials (Production)
        if: ${{ env.ENVIRONMENT == 'prod' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Configuration for Development
      - name: Configure AWS credentials (Preproduction)
        if: ${{ env.ENVIRONMENT == 'dev' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build artefact
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - run: chmod +x gradlew
      - run: ./gradlew publishJavaClientToMavenLocal
      - run: ./gradlew assemble

      - name: Extract project name from settings.gradle
        id: extract_project_name
        run: |
          PROJECT_NAME=$(grep "rootProject.name" settings.gradle | sed "s/rootProject.name *= *'\(.*\)'/\1/")
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          
      - name: Extract project version from build.gradle
        id: extract_project_version
        run: |
          PROJECT_VERSION=$(grep "^version" build.gradle | sed "s/version *= *'\(.*\)'/\1/")
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

      - name: Get S3 bucket name from SSM
        id: get_bucket_name
        run: |
            S3_BUCKET_NAME=$(aws ssm get-parameter --name "/${{ env.PROJECT_NAME }}/${{ env.ENVIRONMENT }}/s3/bucket-name" --query "Parameter.Value" --output text)
            echo "S3_BUCKET_NAME=$S3_BUCKET_NAME" >> $GITHUB_ENV

      - name: Upload JAR to S3
        run: |
          JAR_FILE="build/libs/${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar"
          S3_KEY="${{ env.PROJECT_NAME }}/${{ env.PROJECT_VERSION }}/${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar"
          aws s3 cp $JAR_FILE s3://${{ env.S3_BUCKET_NAME }}/$S3_KEY

