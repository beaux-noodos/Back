import org.apache.tools.ant.taskdefs.condition.Os
import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'


	id 'org.openapi.generator' version '5.3.0'

	id 'jacoco'
}

jacoco {
	toolVersion = "0.8.11"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

tasks.named('test') {
	useJUnitPlatform()
}

task generateJavaClient(type: GenerateTask) {
	generatorName = "java"
	inputSpec = "$rootDir/doc/api.yml".toString()
	outputDir = layout.buildDirectory.dir("gen").get().asFile.toString()  // Updated to use Provider<Directory> getBuildDirectory()	apiPackage = "com.example.templet.endpoint.rest.api"
	apiPackage = "com.example.templet.endpoint.rest.api"
	invokerPackage = "com.example.templet.endpoint.rest.client"
	modelPackage = "com.example.templet.endpoint.rest.model"

	configOptions = [
			serializationLibrary: "jackson",
			dateLibrary: "custom"
	]
	typeMappings = [
			// What date-time type to use when? https://i.stack.imgur.com/QPhGW.png
			Date: "java.time.LocalDate",
			DateTime: "java.time.Instant",
	]
	library = "native"

	groupId = 'com.example'
	id = 'example-api-gen'
	skipValidateSpec = false
	logToStderr = true
	generateAliasAsModel = false
	enablePostProcessFile = false
}

task generateTsClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName = "typescript-axios"
	inputSpec = "$rootDir/doc/api.yml".toString()
	outputDir = layout.buildDirectory.dir("gen").get().asFile.toString()  // Updated to use Provider<Directory> getBuildDirectory()	apiPackage = "com.example.templet.endpoint.rest.api"
	typeMappings = [
			Date    : "Date",
			DateTime: "Date",
	]
	additionalProperties = [
			enumPropertyNaming: "original",
			npmName           : "@example-api/typescript-client",
			npmVersion        : project.properties["args"] ?: "latest"
	]
}

task publishJavaClientToMavenLocal(type: Exec, dependsOn: generateJavaClient) {
	if (Os.isFamily(Os.FAMILY_WINDOWS)){
		commandLine './.shell/publish_gen_to_maven_local.bat'
	} else {
		commandLine './.shell/publish_gen_to_maven_local.sh'
	}
}
tasks.compileJava.dependsOn publishJavaClientToMavenLocal



dependencies {
	implementation 'com.example:example-api-gen:latest'
	implementation 'com.example:example-api-gen:latest'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'com.vladmihalcea:hibernate-types-52:2.9.13'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.postgresql:postgresql'

	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot2:1.9.3'
	implementation 'software.amazon.awssdk:aws-query-protocol:2.20.26'
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
	implementation 'com.amazonaws:aws-lambda-java-events:3.11.3'
	implementation 'software.amazon.awssdk:sqs:2.21.40'
	implementation 'software.amazon.awssdk:eventbridge:2.21.40'
	implementation 'software.amazon.awssdk:s3:2.21.40'
	implementation 'software.amazon.awssdk:s3-transfer-manager:2.21.40'
	implementation 'software.amazon.awssdk.crt:aws-crt:0.28.12'
	implementation 'software.amazon.awssdk:ses:2.21.40'
	implementation 'software.amazon.awssdk:core:2.21.40'

	implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
	implementation 'jakarta.activation:jakarta.activation-api:2.1.2'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'
	implementation 'com.sun.activation:jakarta.activation:2.0.1'

	implementation 'org.apache.tika:tika-core:2.9.1'

	implementation 'org.reflections:reflections:0.10.2'



	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'

//	--> IA dependence
	implementation 'com.squareup.okhttp3:okhttp:4.9.1'
	implementation 'com.google.code.gson:gson:2.8.6'
//	--> IA dependence

//	--> PDF dependence
	implementation 'com.github.librepdf:openpdf:1.3.26'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.22'
//	--> PDF dependence

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:postgresql:1.19.1'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'



	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger:swagger-annotations:1.6.12'

	testImplementation 'org.testcontainers:junit-jupiter:1.19.1'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'}


